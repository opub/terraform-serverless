service: HelloDatabase

region: us-east-1   # this must match "region" variable in terraform

custom:
  env: "dev"        # this must match "env" variable in terraform

provider:
  name: aws
  runtime: nodejs10.x
  timeout: 30
  vpc:
    securityGroupIds:
      - ${ssm:/${self:custom.env}/application/security_group}
    subnetIds:
      "Fn::Split":
        - ", "
        - ${ssm:/${self:custom.env}/application/subnets}
  # password is sensitive so gets pulled at runtime instead of being a clear text env var like below
  iamRoleStatements:
    - Effect: Allow
      Action:
        - "ssm:GetParameter"
      Resource:
        - "Fn::Join":
          - ":"
          - - "arn:aws:ssm"
            - Ref: "AWS::Region"
            - Ref: "AWS::AccountId"
            - "parameter/${self:custom.env}/database/password"
    - Effect: Allow
      Action:
        - "kms:Decrypt"
      Resource:
        - "Fn::Join":
          - ":"
          - - "arn:aws:kms"
            - Ref: "AWS::Region"
            - Ref: "AWS::AccountId"
            - "key/alias/aws/ssm"

functions:
  hello:
    handler: handler.hellodb
    events:
      - http:
          path: test/hello
          method: get
    # variables that have been shared by terraform 
    environment:
      APPLICATION_ENV: ${self:custom.env}
      DATABASE_ENDPOINT: ${ssm:/${self:custom.env}/database/endpoint}
      DATABASE_PORT: ${ssm:/${self:custom.env}/database/port}
      DATABASE_NAME: ${ssm:/${self:custom.env}/database/name~true}
      DATABASE_USER: ${ssm:/${self:custom.env}/database/username~true}
